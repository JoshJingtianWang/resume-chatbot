{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "Examples -------- >>> from iff_model_compare.model_compare import ModelCompare >>> from sklearn.datasets import make_classification >>> from sklearn.model_selection import train_test_split >>> from sklearn.tree import DecisionTreeClassifier >>> from sklearn.linear_model import LogisticRegression >>> X, y = make_classification(n_samples=10000, n_features=20, n_informative=10, n_classes=2, random_state=42) >>> X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) >>> model1 = DecisionTreeClassifier() >>> model2 = LogisticRegression() >>> model1.fit(X_train, y_train) >>> model2.fit(X_train, y_train) >>> model_compare = ModelCompare(evaluation_metric='accuracy', alpha=0.05, one_sided=True) >>> t_stat, p_val = model_compare.run(model1, model2, X_test, y_test) >>> print(\"t-statistic:\", t_stat) >>> print(\"p-value:\", p_val) \"\"\"\n\ndef __init__(self, evaluation_metric: str = 'accuracy', alpha: float = 0.05, one_sided: bool = True, random_seed: Union[int, None] = None, bootstrap_num_iter: int = 100, bootstrap_percent: float = 0.8):", "metadata": {"source": "./documents/IFF/model_compare.py"}, "type": "Document"}}