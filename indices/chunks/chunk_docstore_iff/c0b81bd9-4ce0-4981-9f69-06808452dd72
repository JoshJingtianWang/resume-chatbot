{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "if not isinstance(evaluation_metric, str): raise TypeError('Invalid input type for evaluation_metric. Must be a string.') if evaluation_metric not in {'accuracy', 'f1', 'recall', 'roc', 'mae', 'mse', 'r2'}: raise ValueError(\"Invalid evaluation metric. Must be one of: 'accuracy', 'f1', 'recall', 'roc', 'mae', 'mse', 'r2'.\") if not isinstance(alpha, float): raise TypeError('Invalid input type for alpha. Must be a float.') if not (0 <= alpha <= 1): raise ValueError('Invalid alpha value. Must be between 0 and 1.') if not isinstance(one_sided, bool): raise TypeError('Invalid input type for one_sided. Must be a boolean.') if random_seed is not None and not isinstance(random_seed, int): raise TypeError('Invalid input type for random_seed. Must be an integer or None.') if not isinstance(bootstrap_num_iter, int): raise TypeError('Invalid input type for bootstrap_num_iter. Must be an integer.') if bootstrap_num_iter <= 0: raise ValueError('Invalid bootstrap_num_iter value. Must be a positive integer.') if not isinstance(bootstrap_percent, float): raise TypeError('Invalid input type for bootstrap_percent. Must be a float.') if not (0 < bootstrap_percent <= 1): raise ValueError('Invalid bootstrap_percent value. Must be between 0 and 1 (exclusive).')\n\nlogging.debug(f'Initiating ModelCompare with the following parameters:')\n\nlogging.debug(f'evaluation_metric: {evaluation_metric}')\n\nlogging.debug(f'alpha: {alpha}')\n\nlogging.debug(f'one_sided: {one_sided}')\n\nlogging.debug(f'random_seed: {random_seed}')\n\nlogging.debug(f'bootstrap_num_iter: {bootstrap_num_iter}')\n\nlogging.debug(f'bootstrap_percent: {bootstrap_percent}')\n\nself.evaluation_metric = evaluation_metric\n\nself.alpha = alpha\n\nself.one_sided = one_sided\n\nself.seed = random_seed\n\nself.bootstrap_num_iter = bootstrap_num_iter\n\nself.bootstrap_percent = bootstrap_percent\n\nlogging.info('ModelCompare instance created.')", "metadata": {"source": "./documents/IFF/model_compare.py"}, "type": "Document"}}