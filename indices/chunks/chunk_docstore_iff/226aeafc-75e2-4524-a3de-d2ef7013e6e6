{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "import numpy as np import pandas as pd import seaborn as sns import matplotlib.pyplot as plt from scipy import stats from typing import Dict, List, Tuple, Union, Optional from multiprocessing import Pool\n\nclass PowerSimulation: \"\"\" PowerSimulation simulates the power of a two-sample t-test on binomial data.\n\nIt can estimate power by running multiple t-tests on bootstrapped data generated from two binomial distributions with different success probabilities. The class also supports calculating a fourth attribute while keeping the other three constant, running power simulations in parallel, and plotting the results.\n\nParameters ---------- p1 : float Probability of success for population 1. num_simulations : int, default=100 Number of simulations to estimate power. num_samples : int, default=1000 Number of samples for bootstrapping. metric : str, default='accuracy' The performance metric of interest (e.g., 'accuracy'). seed : Optional[int], default=None Random seed for reproducibility.\n\nAttributes ---------- n1 : int Number of trials for population 1. n2 : int Number of trials for population 2.\n\nExamples -------- >>> power_simulation = PowerSimulation(p1=0.9, num_simulations=100, num_samples=1000, metric='accuracy', seed=42) >>> power_simulation.simulate_power(p2=0.95, size=200, alpha=0.05) 0.87 >>> fixed_attributes = {'p2': 0.95, 'size': 200, 'alpha': 0.05, 'power': 0.8} >>> power_simulation.generate_fourth_attribute(fixed_attributes, target='size') 161 >>> deltas = [0.01, 0.02, 0.03, 0.04, 0.05] >>> size_space = np.arange(10, 201, 10) >>> power_simulation.plot_result(deltas, size_space) (Plot is displayed) \"\"\"\n\ndef __init__(self, p1: float, num_simulations: int = 100, num_samples: int = 1000, metric: str = 'accuracy', seed: Optional[int] = None): \"\"\" Initialize the PowerSimulation object with required parameters.", "metadata": {"source": "./documents/IFF/power_simulation.py"}, "type": "Document"}}