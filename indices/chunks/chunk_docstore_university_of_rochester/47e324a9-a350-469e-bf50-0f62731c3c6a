{"lc": 1, "type": "constructor", "id": ["langchain", "schema", "document", "Document"], "kwargs": {"page_content": "One of the first things we noticed about the data is that many observations in the text column included URLs. These URLs could have been included in the tweet in many ways\u2013most commonly, the user could have added the link to the tweet themselves, or they could have posted a photo which would have been replaced with a link by the Twitter API or manually when the data was being acquired. Having URLs in text is undesirable because of the natural language processing and other exploratory techniques that we wanted to perform. Therefore, it was determined that it would be best to remove URLs from each text value via regular expression replacement.\n\nSimilarly, we found that many text values were actually mentions\u2013a type of tweet that contains an \u201d@\u201d symbol, followed by another user\u2019s Twitter username.[5] Because usernames are not typically relevant to the subject of a tweet, a username might, for example, skew the results of sentiment analysis. For this reason, anything immediately preceded by an \u201d@\u201d symbol was removed.\n\nThere were also a few hundred observations that included HTML entities in the text. An HTML entity is a string that begins with an ampersand (&) and ends with a semicolon (;). These entities are typically intended to display reserved characters, as well as invisible characters.[6] One of the most common HTML entities found in the dataset was the entity corresponding to the ampersand, &amp; . In order to avoid having strings such as amp be interpreted as a word and subsequently included in analysis and visualizations such as the word cloud, these entities had to be removed. Doing this was quite simple, as it only involved using the unescape function from Python\u2019s html library.", "metadata": {"source": "./documents/University of Rochester/data mining Final Project (Report).pdf"}, "type": "Document"}}